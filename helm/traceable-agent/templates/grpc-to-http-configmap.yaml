{{- if .Values.grpcToHttp.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-grpc-to-http-configmap
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "traceableai.labels" . | indent 4 }}
  annotations:
{{ include "traceableai.annotations" . | indent 4 }}
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: main_listener
          address:
            socket_address:
              address: 0.0.0.0
              port_value: {{ .Values.grpcToHttp.port }}
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    access_log:
                      - name: envoy.access_loggers.file
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                          path: "/dev/stdout"
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: app
                          domains:
                            - "*"
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                host_rewrite_literal: {{ .Values.grpcToHttp.platformHost }}
                                {{- if .Values.grpcToHttp.proxyHost }}
                                cluster: loopback_cluster
                                {{- else }}
                                cluster: platform_cluster
                                {{- end}}
                    http_filters:
                      - name: envoy.filters.http.grpc_http1_reverse_bridge
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_http1_reverse_bridge.v3.FilterConfig
                          content_type: "application/grpc"
                          withhold_grpc_frames: false
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              {{- if and .Values.grpcToHttp.serverCertSecretName .Values.grpcToHttp.serverKeySecretName }}
              transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  common_tls_context:
                    tls_certificates:
                      - certificate_chain:
                          filename: "/etc/certs/server.crt"
                        private_key:
                          filename: "/etc/certs/server.key"
              {{- end }}
        {{- if .Values.grpcToHttp.proxyHost }}
        - name: api_proxy_listener
          address:
            pipe:
              path: "@/cluster_0"
          filter_chains:
            - filters:
                - name: tcp
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                    stat_prefix: tcp_stats
                    cluster: "proxy_cluster"
                    tunneling_config:
                      hostname: {{ .Values.grpcToHttp.platformHost }}:{{ .Values.grpcToHttp.platformPort }}
                      {{- if .Values.grpcToHttp.proxyCredentialsEncoded }}
                      headers_to_add:
                        - header:
                            key: Proxy-Authorization
                            value: "Basic {{ .Values.grpcToHttp.proxyCredentialsEncoded }}"
                          append: false
                      {{- end }}
        {{- end }}
      clusters:
        {{- if .Values.grpcToHttp.proxyHost }}
        - name: proxy_cluster
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: proxy_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: {{ .Values.grpcToHttp.proxyHost }}
                          port_value:  {{ .Values.grpcToHttp.proxyPort }}
        - name: loopback_cluster
          connect_timeout: 5s
          upstream_connection_options:
            tcp_keepalive: {}
          type: STATIC
          load_assignment:
            cluster_name: loopback_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        pipe:
                          path: "@/cluster_0"
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              sni: {{ .Values.grpcToHttp.platformHost }}
    {{- else }}
      - name: platform_cluster
        connect_timeout: 5s
        type: strict_dns
        lb_policy: round_robin
        load_assignment:
          cluster_name: platform_cluster
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: {{ .Values.grpcToHttp.platformHost }}
                        port_value: {{ .Values.grpcToHttp.platformPort }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            sni: {{ .Values.grpcToHttp.platformHost }}
    {{- end }}
  {{- end }}